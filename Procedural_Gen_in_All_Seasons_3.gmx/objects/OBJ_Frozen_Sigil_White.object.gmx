<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_Spell_Sigil</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(OBJ_Winter_Talisman) &gt; 0){
    OBJ_Winter_Talisman.deleteable = true;
}
if(instance_number(OBJ_Winter_Talisman_2) &gt; 0){
    OBJ_Winter_Talisman_2.deleteable = true;
}

bulletsPerBurst = 0;
bulletsThisBurst = 0;
timeBetweenBursts = 0;
totalTimeAlive = 0;
dir_adjust = 0;
num_spawners = OBJ_Matara_Boss_Winter.num_spawners;

//orbit
orbit_angle = OBJ_Matara_Boss_Winter.orbit_angle;
orbit_speed = OBJ_Matara_Boss_Winter.orbit_speed;
orbit_radius = 0;

//For the talismans
bulletSpeed = 3;
timeTillStop = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.talismansGo = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>orbit_angle += orbit_speed;
x = OBJ_Matara_Template.x + orbit_radius * cos(orbit_angle * pi / 180);
y = OBJ_Matara_Template.y - orbit_radius * sin(orbit_angle * pi / 180);

direction_mod = point_direction(x,y,OBJ_Matara_Template.x,OBJ_Matara_Template.y) - 90;
new_dir_mod = direction_mod + dir_adjust;

if(orbit_radius &lt; 320){
    canSpawn = false;
    orbit_radius +=4;
    alarm_set(0, totalTimeAlive);
} else {
    with(instance_create(x,y,OBJ_Winter_Talisman)){
            speed = 9;
            timeTillStop = other.timeTillStop;
            color = 0;
            readyToGo = false;
            
            direction = other.direction_mod + 180;
    }
    totalBurstTime = (bulletsPerBurst)+ timeBetweenBursts;
    if ((bulletsThisBurst &lt; (bulletsPerBurst))){
        if(global.difficulty &lt; 4){
            with(instance_create(x,y,OBJ_Winter_Talisman)){
                speed = 9;
                timeTillStop = other.timeTillStop;
                color = 0;
                readyToGo = false;
                
                direction = other.new_dir_mod;
            }
        } else {
            with(instance_create(x,y,OBJ_Lunatic_Laser)){
                distance = 1250;
                timeTillStop = other.timeTillStop;
                //color = 0;
                //readyToGo = false;
                
                direction = other.new_dir_mod;
            }
        }
        bulletsThisBurst++;
    } else {
        bulletsThisBurst++;
    }
    if(bulletsThisBurst &gt;= totalBurstTime){
        bulletsThisBurst = 0;
        dir_adjust += (180/(totalTimeAlive / totalBurstTime));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
